The current Tsunami protocol version is: v1.1

Improvements and protocol version compliant new features
are added in the cvs builds.

v1.1 CvsBuild 33:
 - client code cleanup (client.h -> include/tsunami-client.h)
 - rtclient write_vsib_block() now uses fwrite()
 - cleaned out 64-bit compile warnings

v1.1 CvsBuild 32:
 - 'heartbeat lost' messages now spaced in at most 350ms intervals
   and not shorter
 - realtime server vsibctl.c now uses fread() not read(), now seeking
   and reading from the VSIB no longer has to be multiples of 4096 bytes

v1.1 CvsBuild 31:
 - added proto_version and software_version into
   transcripts of clients, servers
 - servers disconnect on loss of client heartbeat
   - added '--hbtimeout' server command line parameter, default 15s
   - realtime server timeout behaviour: if local backup used, 
     timeout termination not done earlier than at final 
     TS_BLOCK_TERMINATE to insure local backup is complete
   - file server timeout behaviour: as before, if no
     reports from client in 15s then disconnect
 - realtime server, if doing local backup, continues sending 
   to the end even if client completely tcp-disconnected and
   then eventually times out after last block sent/written

v1.1 CvsBuild 30:
 - cosmetic, printf() of 'dir' file lengths the proper unsigned int now
 - 15s timeout only for file server, realtime server TODO

v1.1 CvsBuild 29:
 - fixed another Big Endian endiannes problem and now large transfers
   work, too

v1.1 CvsBuild 28:
 - added early support for Big Endian platforms e.g. Playstation3,
   to enable you have to edit ./common/Makefile.am before running 'configure' 

v1.1 CvsBuild 27:
 - file server and file client support shared file listing 
   via the "dir" command (client/command.c command_dir()).

v1.1 CvsBuild 26:
 - added gapless_till_block client side counter that is later
   needed by the 'tsunamifs' FUSE filesystem

v1.1 CvsBuild 24:
 - fixed client crashing with nForce2 server in Wettzell by
   having recvfrom() not fill out packet source infos, these
   infos were not used anywhere in the first place.
 - server closes client connection after 15s timeout if no
   client side TCP feedback during a transfer, 350ms is the
   required feedback interval from the client so 15s is plenty

v1.1 CvsBuild 22:
 - real-time server, disabled throttling by VSIB and instead use again 
   normal IPD wait as in file server (after a REQUEST_RESTART old blocks 
   are sent as TS_BLOCK_ORIGINAL, but a VSIB does not throttle these old
   ones, so it blasts at 1 Gbit/s and bombs...)
 - client, ttp_request_retransmit additional check at start so that 
   already received blocks are not queued up for later retransmit batch-request

v1.1 CvsBuild 21:
 - client, increased UDP port upping limit from 16 to 256 concurrent client 
   download sessions, added a warning that shows current nr of reserved
   client UDP ports
 - client, enabled RETX_REQBLOCK_SORTING in Makefile.am
 - server, changed block_new into block_type flag, and real-time server
   skips throttling for TS_BLOCK_ORIGINAL only (VSIB does throttling) so
   the final TS_BLOCK_TERMINATE block(s) are not blasted out at 1 Gbit/s

v1.1 CvsBuild 20:
 - added lossless, losswindow, blockdump settings to client transcript printouts
 - fixed rtserver/Makefile.am, rtclient/Makefile.am to define -DVSIB_REALTIME
 - server prints client IP before auth takes place
 - added client transcript file to Octave plot generator script, under ./util/

v1.1 CvsBuild 19:
 - client, cleaned up the GET * code a lot, file list can contain up 
   to 65530 files (although, as 'tsunamid' currently gets * files as 
   command line arguments, the maximum argument length is the current limit)

V1.1 CvsBuild 18:
 - client, replaced 'set noretransmit' option with 'lossless' (yes/no) and 
   'losswindow' (milliseconds) options to allow for near-time lossless transmissions 
   e.g. from limited VSIB memory buffer
 - reduced client ring buffer size from 8192 to 4096

V1.1 CvsBuild 17:
 - realtime server, removed extra delay before sending newly read VSIB block

V1.1 CvsBuild 16:
 - client, added 'set passphrase' option so the user is not prompted for the password, this
   is used for e.g. scripting (of course, plaintext password in scripts then)
	
V1.1 CvsBuild 15:
 - client, "get *", if the server sends full path names, place files in that same path
   on client side if the path exists, otherwise place in current working directory

